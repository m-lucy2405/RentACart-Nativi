/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas.Usuarios;

import Models.Usuario;
import Services.UsuarioService;
import java.awt.BorderLayout;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author diego
 */
public class UsuarioPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form usuariosPrincipal
     */
    
    private JTable tablaUsuarios;
    private JButton btnAgregar, btnEliminar, btnEditar;
    private UsuarioService usuarioService;
    
    public UsuarioPrincipal() {
        initComponents();
        
        usuarioService = new UsuarioService();
        setTitle("Gestión de Usuarios");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        tablaUsuarios = new JTable();
        cargarTablaUsuarios();

        btnAgregar = new JButton("Agregar");
        btnEliminar = new JButton("Eliminar");
        btnEditar = new JButton("Editar");

        // Evento para agregar
        btnAgregar.addActionListener(e -> {
            UsuarioAgregar agregarFormulario = new UsuarioAgregar(this, null);
            agregarFormulario.setVisible(true);
        });

        // Evento para eliminar
        btnEliminar.addActionListener(e -> eliminarUsuario());

        // Evento para editar
        btnEditar.addActionListener(e -> editarUsuario());

        JPanel panelBotones = new JPanel();
        panelBotones.add(btnAgregar);
        panelBotones.add(btnEliminar);
        panelBotones.add(btnEditar);

        setLayout(new BorderLayout());
        add(new JScrollPane(tablaUsuarios), BorderLayout.CENTER);
        add(panelBotones, BorderLayout.SOUTH);
    }
    
    // Cargar los usuarios en la tabla
    private void cargarTablaUsuarios() {
        List<Usuario> usuarios = usuarioService.obtenerTodosLosUsuarios();
        String[] columnNames = {"ID", "Nombre", "Rol"};
        Object[][] data = new Object[usuarios.size()][3];

        for (int i = 0; i < usuarios.size(); i++) {
            data[i][0] = usuarios.get(i).getId();
            data[i][1] = usuarios.get(i).getNombre();
            data[i][2] = usuarios.get(i).getRol();
        }

        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        tablaUsuarios.setModel(model);
    }

    // Método para eliminar un usuario
    private void eliminarUsuario() {
        int selectedRow = tablaUsuarios.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) tablaUsuarios.getValueAt(selectedRow, 0);
            usuarioService.eliminarUsuario(id);
            cargarTablaUsuarios();
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona un usuario para eliminar.");
        }
    }

    // Método para editar un usuario
    private void editarUsuario() {
        int selectedRow = tablaUsuarios.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) tablaUsuarios.getValueAt(selectedRow, 0);
            Usuario usuario = usuarioService.obtenerUsuarioPorId(id);
            UsuarioAgregar agregarFormulario = new UsuarioAgregar(this, usuario);
            agregarFormulario.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona un usuario para editar.");
        }
    }

    // Método para refrescar la tabla después de agregar/editar
    public void refrescarTabla() {
        cargarTablaUsuarios();
    }

        
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 828, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 526, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuarioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuarioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuarioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuarioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsuarioPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
